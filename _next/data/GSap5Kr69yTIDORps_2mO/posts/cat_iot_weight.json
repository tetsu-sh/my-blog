{"pageProps":{"post":{"title":"猫のIOT体重計作りその１","date":"2023-05-19T12:00:00.000Z","slug":"cat_iot_weight","content":"<h2 id=\"%E7%9B%AE%E7%9A%84\"><a class=\"header-anchor-link\" href=\"#%E7%9B%AE%E7%9A%84\" aria-hidden=\"true\"></a> 目的</h2>\n<ul>\n<li>太っている猫と痩せちゃう猫がいるので定点体重観測を自動化したい。</li>\n<li>トイレの量も管理したい。</li>\n<li>猫のIOT体重計を作り、それをトイレの下に配置する</li>\n</ul>\n<h2 id=\"%E4%BB%95%E7%B5%84%E3%81%BF\"><a class=\"header-anchor-link\" href=\"#%E4%BB%95%E7%B5%84%E3%81%BF\" aria-hidden=\"true\"></a> 仕組み</h2>\n<ul>\n<li>ロードセルを板に貼り付けその板の上にトイレを乗せる。</li>\n<li>ロードセルとマイコンをつなぎ、体重変化があったら、データを送信する。</li>\n<li>送信先は自宅内PCであり、ローカルネットワーク通信する\n<ul>\n<li>安上がりなため</li>\n</ul>\n</li>\n<li>PCでローカルのサーバーとDBを立ち上げ、マイコンから送られてきた体重を記録する</li>\n</ul>\n<p>##　思い出</p>\n<ul>\n<li>ロードセルは最初やすい体重計を分解して、 combinatorでつな剛としたが配線がうまくいかず。ロードセルキットを使用した</li>\n<li>マイコンはM5stackでWifiモジュール付き</li>\n<li>サーバーはこちら\n<ul>\n<li><a href=\"https://github.com/tetsu-sh/weight_server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/tetsu-sh/weight_server</a></li>\n<li>ほんとにしょぼいデータをPOSTするだけ。あとそれをGETする</li>\n<li>Rust</li>\n</ul>\n</li>\n<li>マイコンファームウェアは以下のコードをarudinoIDEでなんとか,\n<ul>\n<li>.inoというc言語っぽいやつ<br />\n-　cはよくわからないが、サンプルを組み合わせて作った</li>\n</ul>\n</li>\n<li>所定体重以上をマイコンは検出したら、サーバーに送信\n<ul>\n<li>どれくらいから送信するかが難しい。</li>\n</ul>\n</li>\n<li>体重をゼロにするHTTPAPIも一つ。スマホからPOSTできる</li>\n<li>定期的に体重をゼロにしないと尿、便の重さを送信し続けるので、定期的にゼロにする</li>\n<li>なんとかデータを送る最低限までした。</li>\n</ul>\n<h2 id=\"%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8\"><a class=\"header-anchor-link\" href=\"#%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8\" aria-hidden=\"true\"></a> やりたいこと</h2>\n<ul>\n<li>データを見る画面\n<ul>\n<li>データの変化とかも見れたら良いし、どの子がしたかもみたい</li>\n<li>幸い体重だけで個体を識別できる状況</li>\n</ul>\n</li>\n<li>トイレの量を記録したい</li>\n</ul>\n<div class=\"code-block-container\"><pre class=\"language-c\"><code class=\"language-c\">\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;M5Atom.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;WiFi.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ArduinoJson.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HX711.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOADCELL_DOUT_PIN</span> <span class=\"token expression\"><span class=\"token number\">32</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOADCELL_SCK_PIN</span>  <span class=\"token expression\"><span class=\"token number\">26</span></span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> ssid <span class=\"token operator\">=</span> <span class=\"token string\">\"hoge\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"hoge\"</span><span class=\"token punctuation\">;</span>\n\nHX711 scale<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> weight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  DynamicJsonDocument <span class=\"token function\">doc</span><span class=\"token punctuation\">(</span><span class=\"token function\">JSON_OBJECT_SIZE</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> timeInfo<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> ntpServer <span class=\"token operator\">=</span> <span class=\"token string\">\"ntp.jst.mfeed.ad.jp\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">long</span> gmtOffset_sec <span class=\"token operator\">=</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> daylightOffset_sec <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">configTime</span><span class=\"token punctuation\">(</span>gmtOffset_sec<span class=\"token punctuation\">,</span> daylightOffset_sec<span class=\"token punctuation\">,</span> ntpServer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">getLocalTime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>timeInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to obtain time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">char</span> timeStringBuff<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//50 chars should be enough</span>\n  <span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span>timeStringBuff<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>timeStringBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%A, %B %d %Y %H:%M:%S\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>timeInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>timeStringBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  String <span class=\"token function\">asString</span><span class=\"token punctuation\">(</span>timeStringBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  doc<span class=\"token punctuation\">[</span><span class=\"token string\">\"timestamp\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> timeStringBuff<span class=\"token punctuation\">;</span>\n  doc<span class=\"token punctuation\">[</span><span class=\"token string\">\"weight\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">;</span>\n  String json<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">serializeJson</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  HTTPClient http<span class=\"token punctuation\">;</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/weight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">POST</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    M5<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span> true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Calibration sensor....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    M5<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">.</span><span class=\"token function\">fillpix</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xff0000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>LOADCELL_DOUT_PIN<span class=\"token punctuation\">,</span> LOADCELL_SCK_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The scale value is the adc value corresponding to 1g</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">set_scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">29.71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// set scale 57500/1935</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">tare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// auto set offset</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">.</span><span class=\"token function\">get_units</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    M5<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">.</span><span class=\"token function\">fillpix</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00ff00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Connect the Weight Unit to PortA(G26,32)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Click Btn A for Tare deduction\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Click Btn B Switch to Calibration mode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> wifiReconnectCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> WL_CONNECTED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wifiReconnectCount <span class=\"token operator\">&gt;=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> ESP<span class=\"token punctuation\">.</span><span class=\"token function\">restart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      wifiReconnectCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>wifiReconnectCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \n\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">.</span><span class=\"token function\">get_units</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> weight <span class=\"token operator\">=</span> scale<span class=\"token punctuation\">.</span><span class=\"token function\">get_units</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">1000.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>weight <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weight: %.2fkg \\r\\n\"</span><span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weight: 0.00kg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    M5<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>M5<span class=\"token punctuation\">.</span>Btn<span class=\"token punctuation\">.</span><span class=\"token function\">wasPressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        M5<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">.</span><span class=\"token function\">setBrightness</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        M5<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">.</span><span class=\"token function\">fillpix</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0000ff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scale<span class=\"token punctuation\">.</span><span class=\"token function\">tare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        M5<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">.</span><span class=\"token function\">fillpix</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00ff00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    M5<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">.</span><span class=\"token function\">setBrightness</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    FastLED<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},"__N_SSG":true}